
@{
    ViewBag.Title = "Attraction";
}


    
<div class="row">
    <div class="col-6">
        <input type="search" id="inputKeyword" class="form-control mb-3" placeholder="關鍵字搜尋">
    </div>
    <div class="col-2">
        <button class="btn btn-success">搜尋</button>
    </div>
</div>
    <div>
        <div class="nodata"></div>
        <div class="row row-cols-1 row-cols-md-3 g-4" id="attractions"></div>
        
    </div>



    @section Scripts{
        <script>
            const nodata = document.querySelector('.nodata');   
            const searchInput = document.querySelector('#inputKeyword');
            const divAttractions = document.querySelector('#attractions');
            const searchData = {
                "Keyword": "",
                "CategoryId": 0,
                "SortBy": "",
                "SortDirection": "",
                "Page": 1,
                "PageSize": 12,
            }
            const sortOption = {
                "AttractionName": "名稱",
                "AttractionId": "編號",
            }
            const loadAttraction = async () => {
                const response = await fetch(('/api/AttractionApi/DisplayAttraction'), {
                    'method': 'POST',
                    'body': JSON.stringify(searchData),
                    'headers': {
                        'Content-Type': 'application/json'
                    }
                });
                const datas = await response.json();
                console.log(datas);
                // /AttractionImage/台北101觀景台.jpg
                if (datas.Attractions.length === 0) {
                    divAttractions.innerHTML = `<img src="/AttractionImage/nodatafound.png"" style="height:800;width:1400px;opacity: 0.2">`
                }
                else
                {
                    const cardAttractions = datas.Attractions.map(attraction => {
                        const { Name, Address, Category, City, Description, CoverImage } = attraction;
                        const truncateDescription = Description.length > 50 ? Description.substring(0, 50) + "..." : Description;
                        return (
                                `
                                <div class="card" style="width: 18rem;">
                                  <img src="${CoverImage}" class="card-img-top mt-3" alt="Oops">
                                  <div class="card-body">
                                    <h5 class="card-title">${Name}</h5>
                                    <p class="card-text">${truncateDescription}</p>
                                  </div>
                                  <ul class="list-group list-group-flush">
                                    <li class="list-group-item">${City}</li>
                                    <li class="list-group-item">${Address}</li>
                                    <li class="list-group-item">${Category}</li>
                                  </ul>
                                  <div class="card-body">
                                    <a href="#" class="card-link">Edit?</a>
                                    <a href="#" class="card-link">Delete?</a>
                                  </div>
                                </div>
                                 `
                        );
                    });
                    divAttractions.innerHTML = cardAttractions.join("");
                }
                    

            }
            const loadCategory = async () => {
                const response = await fetch('/api/AttractionApi/GetCategory');

                const catrgory = await response.json();
                console.log(catrgory);
            }

            searchInput.addEventListener('keydown', (event) => {
                if (event.which === 13) {
                    searchData.Keyword = searchInput.value;
                    loadAttraction();
                }
            });

            loadAttraction();

        </script>

    }
